# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  print-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/node:13.8.0
      #- image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello!"

  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0 
    steps:
      - run: mkdir -p workspace
      - run: echo file sharing demo... > workspace/output
      - persist_to_workspace:
          root: workspace
          paths: output

  print_output_file:
    docker:
      - image: circleci/node:13.8.0 
    steps:
      - attach_workspace:
          at: tmp/workspace
      - run: |
          if [[ `cat /tmp/workspace/output` == file sharing demo... ]]; then
            echo "It worked!";
          else
            echo "Nope!"; exit 1
          fi



  print-env:
      docker:
        - image:  circleci/node:13.8.0
      steps:
        - run: 
           name: print env var
           command: echo $my_env 


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - print-env
      - print-hello
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output



